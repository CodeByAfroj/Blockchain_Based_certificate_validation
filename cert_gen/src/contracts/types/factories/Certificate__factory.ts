/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Certificate, CertificateInterface } from "../Certificate";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "certificateID",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "course",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dateIssued",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "issuedBy",
        type: "string",
      },
    ],
    name: "CertificateIssued",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_course",
        type: "string",
      },
      {
        internalType: "string",
        name: "_certificateID",
        type: "string",
      },
      {
        internalType: "string",
        name: "_issuedBy",
        type: "string",
      },
    ],
    name: "issueCertificate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_certificateID",
        type: "string",
      },
    ],
    name: "getCertificate",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "course",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dateIssued",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "certificateID",
        type: "string",
      },
      {
        internalType: "string",
        name: "issuedBy",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getCertificatesByName",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "course",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dateIssued",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "certificateID",
            type: "string",
          },
          {
            internalType: "string",
            name: "issuedBy",
            type: "string",
          },
        ],
        internalType: "struct Certificate.Cert[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061154c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063818a299414610046578063e51c44d114610062578063ed0f2e7514610092575b600080fd5b610060600480360381019061005b9190610e2c565b6100c6565b005b61007c60048036038101906100779190610deb565b6102a6565b604051610089919061115b565b60405180910390f35b6100ac60048036038101906100a79190610deb565b6107df565b6040516100bd9594939291906111ec565b60405180910390f35b600080836040516100d79190611144565b908152602001604051809103902060030180546100f3906113fd565b905014610135576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012c9061125b565b60405180910390fd5b6040518060a001604052808581526020018481526020014281526020018381526020018281525060008360405161016c9190611144565b90815260200160405180910390206000820151816000019080519060200190610196929190610cb1565b5060208201518160010190805190602001906101b3929190610cb1565b506040820151816002015560608201518160030190805190602001906101da929190610cb1565b5060808201518160040190805190602001906101f7929190610cb1565b50905050600061020685610adb565b90506001816040516102189190611144565b90815260200160405180910390208390806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061025f929190610cb1565b507fa624be12790fd6ac838cb03bf8cd67606901956b9a6ea4c4f72c47c1eb814263838686428660405161029795949392919061117d565b60405180910390a15050505050565b606060006102b383610adb565b905060006001826040516102c79190611144565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156103a1578382906000526020600020018054610314906113fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610340906113fd565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b5050505050815260200190600101906102f5565b50505050905060008151141561043557600067ffffffffffffffff8111156103f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561042b57816020015b610418610d37565b8152602001906001900390816104105790505b50925050506107da565b6000815167ffffffffffffffff811115610478577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156104b157816020015b61049e610d37565b8152602001906001900390816104965790505b50905060005b82518110156107d25760008382815181106104fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040516105109190611144565b90815260200160405180910390206040518060a0016040529081600082018054610539906113fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610565906113fd565b80156105b25780601f10610587576101008083540402835291602001916105b2565b820191906000526020600020905b81548152906001019060200180831161059557829003601f168201915b505050505081526020016001820180546105cb906113fd565b80601f01602080910402602001604051908101604052809291908181526020018280546105f7906113fd565b80156106445780601f1061061957610100808354040283529160200191610644565b820191906000526020600020905b81548152906001019060200180831161062757829003601f168201915b5050505050815260200160028201548152602001600382018054610667906113fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610693906113fd565b80156106e05780601f106106b5576101008083540402835291602001916106e0565b820191906000526020600020905b8154815290600101906020018083116106c357829003601f168201915b505050505081526020016004820180546106f9906113fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610725906113fd565b80156107725780601f1061074757610100808354040283529160200191610772565b820191906000526020600020905b81548152906001019060200180831161075557829003601f168201915b5050505050815250508282815181106107b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806107ca9061142f565b9150506104b7565b508093505050505b919050565b6060806000606080600080876040516107f89190611144565b90815260200160405180910390206040518060a0016040529081600082018054610821906113fd565b80601f016020809104026020016040519081016040528092919081815260200182805461084d906113fd565b801561089a5780601f1061086f5761010080835404028352916020019161089a565b820191906000526020600020905b81548152906001019060200180831161087d57829003601f168201915b505050505081526020016001820180546108b3906113fd565b80601f01602080910402602001604051908101604052809291908181526020018280546108df906113fd565b801561092c5780601f106109015761010080835404028352916020019161092c565b820191906000526020600020905b81548152906001019060200180831161090f57829003601f168201915b505050505081526020016002820154815260200160038201805461094f906113fd565b80601f016020809104026020016040519081016040528092919081815260200182805461097b906113fd565b80156109c85780601f1061099d576101008083540402835291602001916109c8565b820191906000526020600020905b8154815290600101906020018083116109ab57829003601f168201915b505050505081526020016004820180546109e1906113fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0d906113fd565b8015610a5a5780601f10610a2f57610100808354040283529160200191610a5a565b820191906000526020600020905b815481529060010190602001808311610a3d57829003601f168201915b505050505081525050905060008160600151511415610aae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa59061127b565b60405180910390fd5b80600001518160200151826040015183606001518460800151955095509550955095505091939590929450565b6060600082905060005b8151811015610ca757604160f81b828281518110610b2c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015610bd05750605a60f81b828281518110610ba0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b15610c94576020828281518110610c10577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b60f81c610c28919061136d565b60f81b828281518110610c64577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080610c9f9061142f565b915050610ae5565b5080915050919050565b828054610cbd906113fd565b90600052602060002090601f016020900481019282610cdf5760008555610d26565b82601f10610cf857805160ff1916838001178555610d26565b82800160010185558215610d26579182015b82811115610d25578251825591602001919060010190610d0a565b5b509050610d339190610d66565b5090565b6040518060a0016040528060608152602001606081526020016000815260200160608152602001606081525090565b5b80821115610d7f576000816000905550600101610d67565b5090565b6000610d96610d91846112cc565b61129b565b905082815260208101848484011115610dae57600080fd5b610db98482856113bb565b509392505050565b600082601f830112610dd257600080fd5b8135610de2848260208601610d83565b91505092915050565b600060208284031215610dfd57600080fd5b600082013567ffffffffffffffff811115610e1757600080fd5b610e2384828501610dc1565b91505092915050565b60008060008060808587031215610e4257600080fd5b600085013567ffffffffffffffff811115610e5c57600080fd5b610e6887828801610dc1565b945050602085013567ffffffffffffffff811115610e8557600080fd5b610e9187828801610dc1565b935050604085013567ffffffffffffffff811115610eae57600080fd5b610eba87828801610dc1565b925050606085013567ffffffffffffffff811115610ed757600080fd5b610ee387828801610dc1565b91505092959194509250565b6000610efb838361109b565b905092915050565b6000610f0e8261130c565b610f18818561132f565b935083602082028501610f2a856112fc565b8060005b85811015610f665784840389528151610f478582610eef565b9450610f5283611322565b925060208a01995050600181019050610f2e565b50829750879550505050505092915050565b6000610f8382611317565b610f8d8185611340565b9350610f9d8185602086016113ca565b610fa681611505565b840191505092915050565b6000610fbc82611317565b610fc68185611351565b9350610fd68185602086016113ca565b610fdf81611505565b840191505092915050565b6000610ff582611317565b610fff8185611362565b935061100f8185602086016113ca565b80840191505092915050565b6000611028601583611351565b91507f43657274696669636174652049442065786973747300000000000000000000006000830152602082019050919050565b6000611068601a83611351565b91507f436572746966696361746520646f6573206e6f742065786973740000000000006000830152602082019050919050565b600060a08301600083015184820360008601526110b88282610f78565b915050602083015184820360208601526110d28282610f78565b91505060408301516110e76040860182611126565b50606083015184820360608601526110ff8282610f78565b915050608083015184820360808601526111198282610f78565b9150508091505092915050565b61112f816113a4565b82525050565b61113e816113a4565b82525050565b60006111508284610fea565b915081905092915050565b600060208201905081810360008301526111758184610f03565b905092915050565b600060a08201905081810360008301526111978188610fb1565b905081810360208301526111ab8187610fb1565b905081810360408301526111bf8186610fb1565b90506111ce6060830185611135565b81810360808301526111e08184610fb1565b90509695505050505050565b600060a08201905081810360008301526112068188610fb1565b9050818103602083015261121a8187610fb1565b90506112296040830186611135565b818103606083015261123b8185610fb1565b9050818103608083015261124f8184610fb1565b90509695505050505050565b600060208201905081810360008301526112748161101b565b9050919050565b600060208201905081810360008301526112948161105b565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156112c2576112c16114d6565b5b8060405250919050565b600067ffffffffffffffff8211156112e7576112e66114d6565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611378826113ae565b9150611383836113ae565b92508260ff0382111561139957611398611478565b5b828201905092915050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156113e85780820151818401526020810190506113cd565b838111156113f7576000848401525b50505050565b6000600282049050600182168061141557607f821691505b60208210811415611429576114286114a7565b5b50919050565b600061143a826113a4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561146d5761146c611478565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220d3f2c02b5aae6b078055f592c8e3d97ce941b0cf5c9495ab04f8b01d5dabb40164736f6c63430008000033";

type CertificateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Certificate__factory extends ContractFactory {
  constructor(...args: CertificateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Certificate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Certificate__factory {
    return super.connect(runner) as Certificate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateInterface {
    return new Interface(_abi) as CertificateInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Certificate {
    return new Contract(address, _abi, runner) as unknown as Certificate;
  }
}
